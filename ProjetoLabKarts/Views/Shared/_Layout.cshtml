<!DOCTYPE html>
<html lang="pt">
<head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>KartMetrics - @ViewData["Title"]</title>

    <!-- Bootstrap + fontes -->
    <link rel="stylesheet" href="~/lib/bootstrap/dist/css/bootstrap.min.css" />
    <link rel="stylesheet" href="~/css/site.css" asp-append-version="true" />
    <link rel="stylesheet" href="~/ProjetoLabKarts.styles.css" asp-append-version="true" />
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap-icons@1.10.5/font/bootstrap-icons.css">
    <link href="https://fonts.googleapis.com/css2?family=Inter:wght@400;600;700&display=swap" rel="stylesheet">

    <style>
        /* === THEME VARIABLES === */
        :root {
            --bg: #f6f6f7;
            --fg: #212529;
            --card-bg: #ffffff;
            --link: #0d6efd;
        }

        @@media (prefers-color-scheme: dark) {
            : root {
                --bg: #121212;
                --fg: #e1e1e1;
                --card-bg: #1e1e1e;
                --link: #66b0ff;
            }
        }

        html[data-theme="light"] {
            --bg: #f6f6f7;
            --fg: #212529;
            --card-bg: #ffffff;
            --link: #0d6efd;
        }

        html[data-theme="dark"] {
            --bg: #121212;
            --fg: #e1e1e1;
            --card-bg: #1e1e1e;
            --link: #66b0ff;
        }

        body {
            padding-top: 56px; /* espaço para a navbar fixa */
        }

        .content ul {
            background-color: var(--card-bg) !important;
            color: var(--fg) !important;
            padding-left: 1rem; /* recuo padrão */
            list-style-position: inside;
        }

        /* listas de grupo (list-group) */
        ul.list-group,
        ul.list-group-flush {
            background-color: var(--card-bg) !important;
            color: var(--fg) !important;
        }

            /* itens de list-group já tinham, mas reforçamos */
            ul.list-group .list-group-item {
                background-color: var(--card-bg) !important;
                color: var(--fg) !important;
                border-color: var(--pagination-border) !important;
            }

        /* paginação */
        .content .pagination {
            background-color: var(--pagination-bg) !important;
        }

        /* para qualquer UL sem classe específica */
        .content ul:not(.nav):not(.pagination):not(.list-group) li {
            border-bottom: 1px solid var(--pagination-border) !important;
            padding: 0.5rem 0;
        }

        .btn-primary {
            background-color: var(--btn-primary-bg) !important;
            color: var(--btn-primary-color) !important;
            border-color: var(--btn-primary-border) !important;
        }

            .btn-primary:hover,
            .btn-primary:focus {
                /* leve escurecimento/claro no hover — opcional */
                filter: brightness(0.9);
            }

        .pagination {
            background-color: var(--pagination-bg) !important;
            padding: 0.5rem;
            border-radius: 0.25rem;
        }

            .pagination .page-link {
                background-color: var(--pagination-bg) !important;
                color: var(--pagination-text) !important;
                border: 1px solid var(--pagination-border) !important;
            }

                .pagination .page-link:hover {
                    background-color: var(--pagination-border) !important;
                }

        .page-item.active .page-link {
            background-color: var(--pagination-bg) !important;
            color: var(--pagination-text) !important;
            border-color: var(--pagination-border) !important;
            border: 1px solid var(--link) !important;
        }

        .table,
        .table-borderless {
            background-color: var(--card-bg) !important;
        }

            .table th,
            .table td {
                background-color: var(--card-bg) !important;
                color: var(--fg) !important;
            }
        /* risca as linhas pares com o fundo principal para alternar */
        .table-striped tbody tr:nth-of-type(even) {
            background-color: var(--bg) !important;
        }

        /* === APLICA AS VARIÁVEIS === */
        body {
            font-family: 'Inter', sans-serif;
            background-color: var(--bg);
            color: var(--fg);
        }

        .card, .footer {
            background-color: var(--card-bg) !important;
        }

        a{
            color: var(--link) !important;
        }

        .nav-link {
            color: var(--link) !important;
            font-weight: 600;
        }

        .nav-link.active {
            background-color: var(--link);
            color: var(--card-bg) !important;
        }

        .content {
            flex: 1;
            padding: 1rem;
        }

        .navbar, .footer, .card {
            background-color: var(--card-bg) !important;
        }

            .navbar .nav-link {
                color: var(--fg) !important;
                font-weight: 600;
                margin-right: 1.5rem; /* mais espaçamento */
            }

                .navbar .nav-link:last-child {
                    margin-right: 0;
                }

                .navbar .nav-link.active {
                    background-color: transparent !important; /* sem fundo */
                    color: var(--link) !important; /* cor do texto */
                    border-bottom: 2px solid var(--link) !important; /* traço em baixo */
                    border-radius: 0 !important; /* sem cantos arredondados */
                    padding-bottom: 0.25rem; /* ajusta afastamento do texto */
                }

                .navbar .nav-link:hover,
                .navbar .nav-link:focus {
                    background-color: transparent !important;
                }



        .navbar-toggler {
            border-color: var(--pagination-border) !important;
        }

        .navbar-brand {
            font-weight: 700;
            color: var(--fg) !important;
            margin-right: 2rem;
        }
        /* Switch de tema */
        .theme-switch {
            display: flex;
            align-items: center;
        }

            .theme-switch .form-check-label {
                color: var(--fg) !important;
                margin-left: 0.5rem;
                margin-bottom: 0;
            }
    </style>
</head>
<body>
    <!-- Navbar Top -->
    <nav class="navbar navbar-expand-lg fixed-top">
        <div class="container-fluid">
            <a class="navbar-brand">🏁 KartAnalytics</a>
            <button class="navbar-toggler" type="button" data-bs-toggle="collapse" data-bs-target="#topNav" aria-controls="topNav" aria-expanded="false" aria-label="Toggle navigation">
                <span class="navbar-toggler-icon"></span>
            </button>

            <div class="collapse navbar-collapse" id="topNav">
                <!-- Itens principais à esquerda -->
                <ul class="navbar-nav">
                    <li class="nav-item">
                        <a class="nav-link @(ViewContext.RouteData.Values["controller"]?.ToString() == "Dashboard" ? "active" : "")"
                           asp-controller="Dashboard" asp-action="Index">Dashboard</a>
                    </li>
                    <li class="nav-item">
                        <a class="nav-link @(ViewContext.RouteData.Values["controller"]?.ToString() == "Sessao" ? "active" : "")"
                           asp-controller="Sessao" asp-action="Index">Sessões</a>
                    </li>
                    <li class="nav-item">
                        <a class="nav-link @(ViewContext.RouteData.Values["controller"]?.ToString() == "Pilotos" ? "active" : "")"
                           asp-controller="Pilotos" asp-action="Index">Pilotos</a>
                    </li>
                    <li class="nav-item">
                        <a class="nav-link @(ViewContext.RouteData.Values["controller"]?.ToString() == "Pistas" ? "active" : "")"
                           asp-controller="Pistas" asp-action="Index">Pistas</a>
                    </li>
                </ul>

                <!-- Ícone de configurações e switch de tema à direita -->
                <ul class="navbar-nav ms-auto align-items-center">
                    <li class="nav-item me-3">
                        <div class="theme-switch">
                            <div class="form-check form-switch mb-0">
                                <input class="form-check-input" type="checkbox" id="themeSwitch">
                                <label class="form-check-label" for="themeSwitch">
                                    <i class="bi" id="themeIcon"></i>
                                    <span id="themeLabel">Modo Escuro</span>
                                </label>
                            </div>
                        </div>
                    </li>
                    <li class="nav-item">
                        <a class="nav-link @(ViewContext.RouteData.Values["controller"]?.ToString() == "Settings" ? "active" : "")"
                           asp-controller="Settings" asp-action="Index">
                            <i class="bi bi-gear-fill fs-5"></i>
                        </a>
                    </li>
                </ul>
            </div>
        </div>
    </nav>

    <!-- Main Content -->
    <div class="container-fluid p-4">
        <main role="main" class="flex-grow-1">
            @RenderBody()
        </main>
    </div>

    <!-- Footer -->
    <footer class="footer border-top py-2 text-muted">
        <div class="container text-center">
            &copy; 2025 - KartMetrics
        </div>
    </footer>

    <script src="~/lib/jquery/dist/jquery.min.js"></script>
    <script src="~/lib/bootstrap/dist/js/bootstrap.bundle.min.js"></script>
    <script src="~/js/site.js" asp-append-version="true"></script>
    <script>
        (function() {
            const root = document.documentElement;
            const sw = document.getElementById('themeSwitch');
            const icon = document.getElementById('themeIcon');
            const label = document.getElementById('themeLabel');

            // Inicialização
            const stored = localStorage.getItem('theme');
            if (stored === 'dark' || (!stored && window.matchMedia('(prefers-color-scheme: dark)').matches)) {
                root.setAttribute('data-theme', 'dark');
                sw.checked = true;
            } else {
                root.setAttribute('data-theme', 'light');
                sw.checked = false;
            }
            updateIconLabel(sw.checked);

            function updateIconLabel(isDark) {
                if (isDark) {
                    icon.className = 'bi bi-sun-fill';
                    label.textContent = 'Modo Claro';
                } else {
                    icon.className = 'bi bi-moon-fill';
                    label.textContent = 'Modo Escuro';
                }
            }

            sw.addEventListener('change', () => {
                const isDark = sw.checked;
                root.setAttribute('data-theme', isDark ? 'dark' : 'light');
                localStorage.setItem('theme', isDark ? 'dark' : 'light');
                updateIconLabel(isDark);
            });
        })();
    </script>
    @await RenderSectionAsync("Scripts", required: false)
</body>
</html>